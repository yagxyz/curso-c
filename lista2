(1) Escreva uma fun ̧c ̃ao que receba uma variável do tipo double representando temperatura e uma variável do tipo char representando a unidade, tal que ‘c’ representa graus Celsius e ‘f ’ representa graus Fahrenheit. Se a fun ̧c ̃ao receber a unidade em Fahrenheit ela deve converter a temperatura para Celsius, e se receber em Celsius deve convertê-la para Fahrenheit. Em ambos os casos, a fun ̧c ̃ao retorna o valor no formato double. Para tanto, utilize o seguinte protótipo: double converter temperatura(double,char); 
(2) Escreva uma fun ̧c ̃ao que leia as coordenadas de dois pontos, passados para a fun ̧c ̃ao como dois vetores de double, sendo constituídos de dois elementos cada (coordenada x e y de cada ponto) e retorne a distˆancia entre eles, no formato double. Utilize o seguinte protótipo: double distancia(double [],double []); 
(3) Escreva uma fun ̧c ̃ao que receba como entrada um inteiro representando o primeiro termo de uma Progress ̃ao Aritm ́etica, um inteiro representando o'número n de termos, é um inteiro representando a diferença ̧ca entre dois números consecutivos. A fun ̧c ̃ao deve retornar o valor do n- ́ésimo termo desta P.A. no formato int. Utilize o seguinte protótipo: int n ésimo termo(int, int, int); 
(4) Escreva uma fun ̧c ̃ao que receba dois valores do tipo double representando a base e a altura de um triˆangulo e retorne o valor da sua ́área no formato double. Utilize o seguinte protótipo: double area triangulo(double,double); 
(5) Escreva uma fun ̧c ̃ao que receba trˆes números inteiros e retorne o maior deles. Utilize o seguinte protótipo: int maior de tres(int, int, int); 
(6) Escreva uma fun ̧c ̃ao que leia o ano, no formato inteiro, e retorne se o ano ́é bissexto ou não ̃ao. Se for bissexto retorna 1, se n ̃ao for retorna 0. Utilize o seguinte protótipo: int ano bissexto(int); 
(7) Escreva uma fun ̧c ̃ao que leia os trˆes lados de um triˆangulo, no formato double, e retorne 0 se ele ́e is ́osceles, 1 se for escaleno ou 2 se for equil ́atero. Utilize o seguinte protótipo: int tipo triângulo(double, double, double); 
(8) Escreva uma fun ̧c ̃ao que lˆe as duas coordenadas x e y de um ponto, ambas no formato inteiro, e retorne de 1 a 4, representando o quadrante em que a coordenada está localizada. Utilize o seguinte protótipo: int quadrante(double, double); 
(9) Escreva uma fun ̧c ̃ao que recebe dois n ́umeros inteiros positivos base b e expoente e. Utilizando somente comandos de repetição ̧c ̃ao (for/while), a fun ̧c ̃ao retorna o valor inteiro be. Utilize o seguinte protótipo: int potencia(int,int);
(10) Escreva uma fun ̧c ̃ao que recebe um n ́umero inteiro n é que calcule e retorne o valor Pni=1 i. NÃO ̃ao utilize fórmulas, como as da soma de uma Progressão ̃ao Aritmética. Utilize o seguinte protótipo: int somatorio(int); 
(11) Escreva uma fun ̧c ̃ao que recebe um n ́umero inteiro e retorne a quantidade de valores entre 2 e n que s ̃ao divisores de n, também no formato inteiro. Utilize o seguinte protótipo: int divisores de n(int); 
(12) Escreva uma fun ̧c ̃ao que receba um inteiro n e retorne o fatorial de n, em formato inteiro. Utilize o seguinte protótipo: int fatorial(int); 
(13) Escreva uma fun ̧c ̃ao que receba uma string (vetor do tipo char) e retorne 1 se a string ́e um palíndromo (por exemplo, arara e osso são palíndromos: independente do sentido de leitura, a palavra não ̃ao muda), e 0 no caso contr ́ario. Utilize o seguinte protótipo: int palíndromo(char []); 
(14) Escreva uma fun ̧c ̃ao que receba um vetor de inteiros e seu tamanho como parˆametros, em formato inteiro, e retorne a soma dos n ́umeros pares deste vetor. Utilize o seguinte protótipo: int soma dos pares(int [], int); 
(15) Escreva uma fun ̧c ̃ao que receba dois vetores inteiros a e b e um inteiro n representando o'número de elementos dos vetores. A fun ̧c ̃ao deve retornar o produto escalar desses dois vetores a.b =Panini, no formato inteiro. Utilize o seguinte protótipo: int produto escalar(int [], int[],int); 
(16) Escreva uma fun ̧c ̃ao que receba duas strings (vetor do tipo char) e retorne 1 se a segunda palavra ́é um anagrama da primeira (por exemplo “ROMA”, “MORA”, “ORAM”, “AMOR”, “RAMO” s ̃ao anagramas entre si.) , e 0 no caso contr ́ario. Utilize o seguinte protótipo: int anagrama(char [], char[]); 
(17) Escreva uma fun ̧c ̃ao que receba um vetor inteiro, com elementos não ̃ao ordenados, um inteiro n que representa o n ́umero de elementos deste vetor, é um inteiro i. Sua fun ̧c ̃ao deve retornar 0 se n ̃ao estiver presente no vetor, ou um inteiro no intervalo [1,n], representando o'número de tentativas caso i seja encontrado. Sua fun ̧c ̃ao deve implementar o algoritmo de busca sequencial. Utilize o seguinte protótipo: int busca sequencial(int [], int, int); 
(18) Escreva uma fun ̧c ̃ao que receba um vetor inteiro, com elementos ordenados, um inteiro n que representa o n ́umero de elementos deste vetor, é um inteiro i. Sua fun ̧c ̃ao deve retornar 0 se n ̃ao estiver presente no vetor, ou um inteiro no intervalo [1,n], representando o'número de tentativas caso i seja encontrado. Sua fun ̧c ̃ao deve implementar o algoritmo de busca bing ́aria. Utilize o seguinte protótipo: int busca binária(int [], int, int); 
(19) Escreva uma fun ̧c ̃ao que receba um n ́umero inteiro e retorna o primeiro número da série de fibonacci que ´é maior ou igual a n, no formato inteiro. Utilize o seguinte protótipo: int fibonacci n(int);
(20) Escreva uma fun ̧c ̃ao que recebe um n ́umero inteiro e retorna o maior n ́umero primo que ́e menor ou igual a n. Para tanto, utilize o seguinte protótipo: int primo(int); 
(21) Escreva uma fun ̧c ̃ao que receba uma string (vetor do tipo char), um char acter c (tipo char) e retorne o n ́umero de ocorˆencias de c nesta string. Utilize o seguinte protótipo: int ocorrências de caracter(char[], char); 
(22) Escreva uma fun ̧c ̃ao que receba dois vetores do tipo inteiro, contendo 3 elementos cada, sendo estes: as coordenadas x e y do centro de um c ́ırculo, e seu raio r. Sua fun ̧c ̃ao deve retornar 1 se os dois círculos colidirem e 0 no caso contr ́ario. Utilize o seguinte protótipo: int colisão círculos(int [], int []); 
(23) Escreva uma fun ̧c ̃ao que receba um vetor inteiro, o n ́umero n de elementos neste vetor, e um inteiro x. Sua fun ̧c ̃ao deve retornar o'número de ocorrˆencias do n ́umero inteiro x no vetor supracitado. Para tanto, utilize o seguinte protótipo: int ocorrências de elemento(int [], int, int); 
(24) Escreva uma fun ̧c ̃ao que recebe um n ́umero inteiro e retorna a quantidade de n ́umeros primos no intervalo [2,n]. Para tanto, utilize o seguinte protótipo: int primos(int); 
(25) Escreva uma fun ̧c ̃ao que receba um vetor do tipo inteiro, um inteiro n representando o'número de elementos deste vetor e retorna o maior elemento deste vetor. Utilize o seguinte protótipo: int max(int [], int); 
(26) Escreva uma fun ̧c ̃ao que receba um vetor do tipo inteiro, um inteiro n representando o'número de elementos deste vetor e retorna o menor elemento deste vetor. Utilize o seguinte protótipo: int min(int [], int); 
(27) Escreva uma fun ̧c ̃ao que receba um vetor do tipo inteiro, um inteiro n representando o'número de elementos deste vetor e retorna o índice do maior elemento deste vetor. Utilize o seguinte protótipo: int max int(int [], int); 
(28) Escreva uma fun ̧c ̃ao que receba um vetor do tipo inteiro, um inteiro n representando o'número de elementos deste vetor e retorna o índice do menor elemento deste vetor. Utilize o seguinte protótipo: int min int(int [], int); 
(29) Escreva uma fun ̧c ̃ao que receba duas strings (vetor tipo char) de comprimento n e m respectivamente, tal que n ≤ m, contendo zeros e uns, ou seja duas strings representando números binários. Sua fun ̧c ̃ao deve retornar quantas vezes a primeira string aparece na segunda, de forma contínua. Por exemplo, se a primeira for “101” e a segunda “1101010011010”, sua fun ̧c ̃ao deve retornar 3. Utilize o seguinte protótipo: int substring(char [], char []);
(30) Escreva uma fun ̧c ̃ao que receba como entrada um inteiro representando o primeiro termo de uma Progress ̃ao Geom ́etrica, um inteiro representando o'número n de termos, é um inteiro representando a raz˜ao entre dois números consecutivos. A fun ̧c ̃ao deve retornar o valor do n- ́ésimo termo dessa G.A. no formato int. Utilize o seguinte protótipo: int n ésimo termo(int, int, int); 
(31) Escreva uma fun ̧c ̃ao que receba como entrada um inteiro representando o'número de lados n de um dado virtual e retorne como resultado de um lançamento do dado o lado onde o mesmo parou. Por exemplo, se n = 2 podemos simular o lançamento de uma moeda, se n = 6, ou de um dado cúbico convencional. Dica: pesquise sobre a fun ̧c ̃ao rand na stdlib.h. Para tanto, utilize o seguinte protótipo: int dado virtual(int); 
(32) Fa¸ca um jogo de advinha¸c˜ao de n´umeros; 
• o usu´ario deve começar digitando o inteiro n no teclado, que representa o maior número que poderia aparecer no jogo de advinha¸c˜ao 
• utilizando este n digitado pelo usuário, o computador gera um outro inteiro, o'número secreto, dentro do intervalo [0, n] aleatoriamente 
– adicione no cabe¸calho 
#include <time.h> 
– adicione dentro do main() 
srand(time(NULL)); 
int numero secreto=rand()%(n+1); 
– estamos utilizando o gerador de n´umeros aleat´orios do C, rand(), que usa o horário atual, time(NULL), como ponto de partida, ou seed (semente) da fun¸c˜ao srand(), que gera a sequˆencia de n´umeros aleat´orios que ser´a utilizada. 
– portanto, como cada execução do programa acontece em horários diferentes, os números gerados por rand() serão diferentes na maioria destas execuções. 
• o usu ́ario ter ́aki log2 (k ́e do tipo inteiro) chances para adivinhar qual o ́ número secreto, digitando suas tentativas no teclado. 
– adicione ao cabeçalho 
#include <math.h> 
– adicione dentro do main() 
int k=ceil(log2(n)); 
– estamos utilizando a fun¸c˜ao ceiling (teto) para arredondar, para cima, números fracionários: d4.5e = 5, d2.7e = 3, d7.2e = 8, etc. 
• Se o usuário adivinhar o número correto, dentro do limite de k tentativas, o jogo termina com a vitória do usuário. 
• Cada vez que o usuário faz uma tentativa mal sucedida, o computador deve ́ a dizer se o número secreto ́ é maior ou menor que a tentativa atual, e quantas tentativas restam ao usu ́ ario. 
• se as tentativas se esgotarem o jogo termina com a derrota do usuário. 
(33) Escreva uma fun ̧c ̃ao que receba uma matriz quadrada (vetor unidimensional com n×n elementos - índices linearizados), e um inteiro n representando o'número de linhas e colunas. Sua fun ̧c ̃ao deve retornar 1 se a matrix for inverse 0 no caso contr ́ario. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices linearizados (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int matriz inversível(int [], int); 
(34) Escreva uma fun ̧c ̃ao que receba um número y do tipo double, e retorne a raiz quadrada de y (√y). Deve-se calcular a raiz quadrada utilizando um método de aproximar ̧c ̃ao f(x) = x2 − y (ou seja n ̃ao ́é permitido utilizar sqrt da biblioteca math.h). Utilize como aproxima ̧c ̃ao inicial x0 =y2. Para calcular cada nova aproxima ̧c ̃ao, utilize o m ́etodo de Newton: xt+1 = xt −f(xt) f0(xt). A fun¸c˜ao deve retorna o valor equivalente a décima aproxima ̧c ̃ao, ou seja x10. Utilize o seguinte protótipo: double sqrt newton(double); 
(35) Escreva uma fun ̧c ̃ao que receba um número decimal em formato inteiro, fa ̧ca a conversão ̃ao para binário e retorne o respectivo valor como um inteiro contendo apenas dígitos 1 e 0. Utilize o seguinte protótipo: int decimal binário(int); 
(36) Escreva uma fun ̧c ̃ao que receba uma string (vetor do tipo char) representando dígitos binários, e faça a conversão para decimal e retorne o respectivo valor como um inteiro. Utilize o seguinte protótipo: int binário decimal(char []); 
(37) Escreva uma fun ̧c ̃ao que receba como entrada um ano no formato inteiro e retorne a data da Páscoa naquele ano no formato inteiro (diamesano, ou seja caso o dia<10, teremos um inteiro com 7 d ́ıgitos, caso o dia≥10 teremos um inteiro com 8 d ́ıgitos). Vocˆe deve fazer uma pesquisa para encontrar a f ́ormula que calcula a data da Páscoa. Utilize o seguinte protótipo: int páscoa(int); 
(38) Um jogador da Mega-Sena ́e supersticioso, é s ́o faz jogos em que o primeiro número do jogo ́e para, o segundo ́eo terceiro ́e para, o quarto ́e ́ımpar, o quinto ́e par e o sexto ́e ́ımpar. Escreva uma fun ̧c ̃ao que retorne a quantidade de jogos possíveis que obedecem o padrão acima, utilizando o formato inteiro. Utilize o seguinte protótipo: int mega sena(void); 
(39) Escreva uma fun ̧c ̃ao que receba um n ́umero inteiro não ̃ao negativo n, e retorne 1 se esse número ́é um palíndromo (por exemplo 121 e 21022012 são palíndromos, pois invertendo-se a ordem dos dígitos o'número resultante não ̃ao se altera) e 0 no caso contr ́ario. Dica: utilizar a fun ̧c ̃ao sprintf() para converter o inteiro em uma string (vetor do tipo char terminado em \0). Para tanto, utilize o seguinte protótipo: int número palíndromo(int);  
(40) Escreva uma fun ̧c ̃ao que receba um texto, em uma string (vetor do tipo char), formado de letras mai ́usculas, v ́ırgulas, pontos e espa ̧cos, terminado pelo caracter \0 (que somente ocorre no fim do texto). A fun ̧c ̃ao deve retornar o'número de palavras com comprimento maior ou igual a 5. Para tanto, utilize o seguinte protótipo: int palavras 5 letras(char []); 
(41) Escreva uma fun ̧c ̃ao que receba dois vetores do tipo double, xe um inteiro n representando a quantidade de elementos desses vetores. A fun ̧c ̃ao Pn  deve retornar a média ponderada m¯ = i=1 P xiwi i=1 wi. Utilize o seguinte protótipo: n  double media ponderada(double [], double [], int); 
(42) Escreva uma fun ̧c ̃ao que leia um n ́umero inteiro positivo menor ou igual a 3999, convertendo-o para sua representa ̧c ̃ao em algarismos romanos, retornando o respectivo número de dígitos romanos. Para tanto, utilize o seguinte protótipo: int algarismos romanos(int); 
(43) Escreva uma fun ̧c ̃ao que receba uma matriz quadrada (vetor unidimensional com n×n elementos), e o inteiro n representando o'número de linhas e colunas e retorne 1 se a matrix for diagonal (todos elementos fora da diagonal principal iguais a zero) e 0 caso contr ́ario. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices linearizados (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int matriz diagonal(int [], int); 
(44) Escreva uma fun ̧c ̃ao que receba uma matriz quadrada (vetor unidimensional com n×n elementos), e o inteiro n representando o'número de linhas e colunas e retorna o determinante desta matriz, no formato inteiro. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices lineares (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int determinante matrix(int [], int); 
(45) Escreva uma fun ̧c ̃ao que receba uma matriz quadrada (vetor unidimensional com n×n elementos), e o inteiro n representando o'número de linhas e colunas e retorne 1 se a matrix for simétrica (ou seja M = MT) e 0 no caso contr ́ario. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices lineares (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int matriz simétrica(int [], int); 
(46) Escreva uma fun ̧c ̃ao que receba o dia, mˆes e ano, todos em formato inteiro, e retorne 1 se a data for válida (ou seja se a data existe) e 0 no caso contr ́ario. Utilize o seguinte protótipo: int data válida(int, int, int); 
(47) Escreva uma fun ̧c ̃ao que receba um vetor inteiro, o n ́umero n de elementos neste vetor e retorne 1 se o vetor estiver ordenado em ordem não ̃ao decrescente, 2 se a ordem for não ̃ao crescente e 0 no caso de não estar ordenado. Utilize o seguinte protótipo: int ordenado(int [], int);
(48) Escreva uma fun ̧c ̃ao que receba um vetor double, o inteiro n representando o'número de elementos deste vetor e retorne o respectivo desvio padr ̃ao (σ), em formato double. Para calcular o desvio padr ̃ao faz-se necessário o cálculo prévio  da média (x ̄). Fórmulas: x ̄ =1 nP ni=1 xi e σ =q1n Pni=1(xi − x ̄)2. Utilize o seguinte protótipo: double média dp(double [], int); 
(49) Escreva uma fun¸c˜ao que receba um n´umero inteiro e converta seus digitos utilizando c´odigo morse. Sua fun¸c˜ao deve retornar o n´umero de ocorrˆencias do caracter ‘.’ na string resultante. O c´odigo morse para cada digito ´e: 1: “. - - - -”, 2: “. . - - -”, 3: “. . . - -”, 4: “. . . . -”, 5: “. . . . .”, 6: “- . . . .”, 7: “- - . . .”, 8: “- - - . .”, 9: “- - - - .”, 0: “- - - - -”. Para tanto, utilize o seguinte prot´otipo: int morse(int); 
(50) Escreva uma fun ̧c ̃ao que receba duas strings (vetor tipo char) representando a escolha de dois jogadores em uma partida de “Papel, Pedra, Tesoura, Lagarto, Spock”. As regras são ̃ao as seguintes: Tesoura corta o Papel, Papel cobre a Pedra, Pedra esmaga o Lagarto, Lagarto envenena o Spock, Spock destrói a Tesoura, Tesoura decapita o Lagarto, Lagarto come Papel, Papel refuta o Spock, Spock vaporiza a Pedra, Pedra destrói a Tesoura. Sua fun ̧c ̃ao deve retornar 1 se o primeiro jogador for o vencedor, 2 se o segundo jogador for o vencedor, e 0 caso haja um empate. Utilize o seguinte protótipo: int phtls(char [], char []);
(51) Uma matriz quadrada de inteiros ́e um quadrado mágico se a soma dos elementos de cada linha, a soma dos elementos de cada coluna, a soma dos elementos da diagonal principal e da diagonal secundária são ̃ao todos iguais. A matriz abaixo ́ é um exemplo de quadrado mágico. Escreva uma fun ̧c ̃ao que receba uma matriz quadrada (vetor unidimensional com n×n elementos), e o inteiro n representando o'número de linhas e colunas e retorne 1 se esta for um quadrado mágico e 0 caso contr ́ario. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices lineares (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int quadrado mágico(int [], int);
(52) Sudoku ́ e jogado numa malha de 9×9 quadrados, dividida em sub-malhas de 3x3 quadrados, chamada “quadrantes”. O objetivo do jogo ́e preencher os quadrados com números entre 1 e 9 de acordo com as seguintes regras: 1-) Cada número pode aparecer apenas uma vez em cada linha, 2-) Cada número pode aparecer apenas uma vez em cada coluna, 3-) Cada número pode aparecer apenas uma vez em cada quadrante. Escreva uma fun ̧c ̃ao que receba uma matriz de inteiros com 9 linhas e 9 colunas (vetor unidimensional com 9×9 elementos), sendo cada elemento preenchido com um n ́umero de 1 a 9 e retorne 1 se ́é um jogo válido e 0 caso contr ́ario. Um jogo válido respeita as trˆes regras acima, sendo que um exemplo pode ser visualizado abaixo. Vocˆe deve percorrer a matriz utilizando o m ́etodo de índices lineares (por exemplo, linha×na + coluna). Utilize o seguinte protótipo: int sudoku(int []);
(53) Fa¸ca uma fun¸c˜ao que calcule e escreva uma tabela de graus cent´ıgrados em fun¸c˜ao de graus Fahrenheit, variando de um em um de 0 a 1000 graus Fahrenheit 
